#!/bin/bash -e

if [ "$XTRACE" = 1 ]; then set -x; fi

locked() {
  while ! shlock -f "$LOCK" -p $$ ; do sleep 0.25; done
  "$@"
  rm "$LOCK"
}

if [ "$TRAVIS_OS_NAME" = "linux" ]; then
  LOCK="/tmp/install.lock"
  OUT="/tmp/install.out"
  (flock $LOCK bash -c "sudo -E apt-add-repository -y ppa:ubuntu-toolchain-r/test && sudo -E apt-get -yq update && sudo -E apt-get -yq --no-install-suggests --no-install-recommends install libstdc++-8-dev") >> "$OUT" 2>&1 &
  LIBSTD_INSTALL_PID=$!
  (flock $LOCK sudo -E apt-get -yq --no-install-suggests --no-install-recommends install g++-8) >> "$OUT" 2>&1 &
  GCC_INSTALL_PID=$!
elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
  LOCK="$TMPDIR/install.lock"
  OUT="$TMPDIR/install.out"
  locked brew install lcov >> "$OUT" 2>&1 &
  LCOV_INSTALL_PID=$!
  locked brew install prettier clang-format >> "$OUT" 2>&1 &
  FORMAT_INSTALL_PID=$!
elif [ "$TRAVIS_OS_NAME" = "windows" ]; then
  OUT="$TMP/install.out"
  choco install make >> "$OUT" 2>&1 &
  MAKE_INSTALL_PID=$!
fi

folded() {
  FOLD=$((FOLD+1))
  echo -e "travis_fold:start:cppsm.$FOLD\033[33;1m$1\033[0m"
  travis_time_start
  shift
  "$@"
  travis_time_finish
  echo -e "\ntravis_fold:end:cppsm.$FOLD\r"
}

finish-install() {
  if ! wait "$1"; then
    cat "$OUT"
    exit 1
  fi
}

export CMAKE_HELP
CMAKE_HELP="$(cmake --help)"

if ! command -v cppsm > /dev/null; then
  git submodule update --init --recursive -- .cppsm
  export PATH="$PWD/.cppsm/.cli/bin:$PATH"
fi

for CONFIG in Debug Release; do
  export CMAKE_BUILD_TYPE=$CONFIG
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    folded ... finish-install "$LIBSTD_INSTALL_PID"
    CC="clang" CXX="clang++" folded "Clang $CONFIG" cppsm test
    folded ... finish-install "$GCC_INSTALL_PID"
    CC="gcc-8" CXX="g++-8" folded "GCC $CONFIG" cppsm test
  elif [ "$TRAVIS_OS_NAME" = "windows" ]; then
    CC="" CXX="" folded "VC $CONFIG" cppsm test
    folded ... finish-install "$MAKE_INSTALL_PID"
    CC="gcc" CXX="g++" folded "GCC $CONFIG" cppsm test
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    CC="clang" CXX="clang++" folded "Clang $CONFIG" cppsm test
    CC="gcc-8" CXX="g++-8" folded "GCC $CONFIG" cppsm test
  else
    echo "Unsupported OS: $TRAVIS_OS_NAME"
    exit 1
  fi
done

code-coverage() {
  CLEAN=1 COVERAGE=1 cppsm test
  lcov --capture --directory . --output-file coverage.info
  lcov --remove coverage.info '/Applications/*' --output-file coverage.info
  bash <(curl -s https://codecov.io/bash) -f coverage.info
  rm -f coverage.info
}

format-check() {
  cppsm format
  if [[ $(git status --porcelain) ]] ; then
    git status
    git diff
    exit 1
  fi
}

if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  if [ -n "$CODECOV" ]; then
    folded ... finish-install "$LCOV_INSTALL_PID"
  fi
  folded "Code coverage" code-coverage
  folded ... finish-install "$FORMAT_INSTALL_PID"
  folded "Format check" format-check
fi
