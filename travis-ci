#!/bin/bash -e

if [ "$XTRACE" = 1 ]; then set -x; fi

fold-start() {
  FOLD=$((FOLD+1))
  echo -e "travis_fold:start:cppsm.$FOLD\033[33;1m$1\033[0m"
  travis_time_start
}

fold-end() {
  travis_time_finish
  echo -e "\ntravis_fold:end:cppsm.$FOLD\r"
}

INSTALL_OUT="$TMPDIR/install.out"

install-brew() {
  if ! command -v "$1" > /dev/null; then
    local INSTALL_LOCK="$TMPDIR/install.lock"
    while ! shlock -f "$INSTALL_LOCK" -p $$ ; do
      sleep 0.25
    done
    brew install "$1"
    rm "$INSTALL_LOCK"
  fi
}

install-choco() {
  if ! command -v "$1" > /dev/null; then choco install "$1"; fi
}

finish-install() {
  if ! wait "$1"; then
    cat "$INSTALL_OUT"
    exit 1
  fi
}

if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  install-brew lcov >> "$INSTALL_OUT" 2>&1 &
  LCOV_INSTALL_PID=$!
  install-brew prettier >> "$INSTALL_OUT" 2>&1 &
  PRETTIER_INSTALL_PID=$!
  install-brew clang-format >> "$INSTALL_OUT" 2>&1 &
  CLANG_FORMAT_INSTALL_PID=$!
elif [ "$TRAVIS_OS_NAME" = "windows" ]; then
  install-choco make >> "$INSTALL_OUT" 2>&1 &
  MAKE_INSTALL_PID=$!
fi

export CMAKE_HELP
CMAKE_HELP="$(cmake --help)"

if ! command -v cppsm > /dev/null; then
  git submodule update --init --recursive -- .cppsm
  export PATH="$PWD/.cppsm/.cli/bin:$PATH"
fi

export CMAKE_BUILD_TYPE

for CMAKE_BUILD_TYPE in Debug Release; do
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    fold-start "GCC-$CMAKE_BUILD_TYPE"
    CC="$GNU_CC" CXX="$GNU_CXX" cppsm test
    fold-end

    fold-start "Clang-$CMAKE_BUILD_TYPE"
    CC="$CLANG_CC" CXX="$CLANG_CXX" cppsm test
    fold-end
  elif [ "$TRAVIS_OS_NAME" = "windows" ]; then
    fold-start "VC-$CMAKE_BUILD_TYPE"
    CC="" CXX="" cppsm test
    fold-end

    fold-start "GCC-$CMAKE_BUILD_TYPE"
    finish-install "$MAKE_INSTALL_PID"
    CC="gcc" CXX="g++" cppsm test
    fold-end
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    fold-start "Clang-$CMAKE_BUILD_TYPE"
    CC="clang" CXX="clang++" cppsm test
    fold-end

    fold-start "GCC-$CMAKE_BUILD_TYPE"
    CC="gcc-8" CXX="g++-8" cppsm test
    fold-end
  else
    echo "Unsupported OS: $TRAVIS_OS_NAME"
    exit 1
  fi
done

if [ -n "$CODECOV" ] && [ "$TRAVIS_OS_NAME" = "osx" ]; then
  fold-start "Code-coverage"
  CLEAN=1 COVERAGE=1 cppsm test
  finish-install "$LCOV_INSTALL_PID"
  lcov --capture --directory . --output-file coverage.info
  lcov --remove coverage.info '/Applications/*' --output-file coverage.info
  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
  rm -f coverage.info
  fold-end
fi

if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  finish-install "$PRETTIER_INSTALL_PID"
  finish-install "$CLANG_FORMAT_INSTALL_PID"
fi

if command -v clang-format > /dev/null && command -v prettier > /dev/null; then
  fold-start "Format-check"
  cppsm format
  if [[ $(git status --porcelain) ]] ; then
    git status
    git diff
    exit 1
  fi
  fold-end
fi
