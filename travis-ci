#!/bin/bash -ex

export CMAKE_HELP
CMAKE_HELP="$(cmake --help)"

if ! command -v cppsm > /dev/null; then
  git submodule update --init --recursive -- .cppsm
  export PATH="$PWD/.cppsm/.cli/bin:$PATH"
fi

export CMAKE_BUILD_TYPE

for CMAKE_BUILD_TYPE in Debug Release; do
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    CC="$GNU_CC" CXX="$GNU_CXX" cppsm test
    CC="$CLANG_CC" CXX="$CLANG_CXX" cppsm test
  elif [ "$TRAVIS_OS_NAME" = "windows" ]; then
    if ! command -v make > /dev/null; then
      choco install make
    fi
    CC='' CXX='' cppsm test
    cppsm test
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    cppsm test
  else
    echo "Unsupported OS: $TRAVIS_OS_NAME"
    exit 1
  fi
done

if ! command -v prettier > /dev/null; then
  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    brew install prettier
  fi
fi

if ! command -v clang-format > /dev/null; then
  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    brew install clang-format
  fi
fi

if command -v clang-format > /dev/null && command -v prettier > /dev/null; then
  cppsm format
  if [[ $(git status --porcelain) ]] ; then
    git status
    git diff
    exit 1
  fi
fi

if [ -n "$CODECOV" ] && [ "$TRAVIS_OS_NAME" = "osx" ]; then
  CLEAN=1 COVERAGE=1 cppsm test
  if ! command -v lcov > /dev/null; then
    brew install lcov
  fi
  lcov --capture --directory . --output-file coverage.info
  lcov --remove coverage.info '/Applications/*' --output-file coverage.info
  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
fi
